workspace:
  base: /go
  path: src/github.com/kubermatic/kubeone

pipeline:
  # check dependencies are in-order
  dep:
    commands:
    - dep ensure -v
    - git diff --exit-code
    image: quay.io/kubermatic/dep:0.5.0-1

  # compile a build
  build:
    image: golang:1.11.2
    commands:
    - make build

  lint:
    image: golang:1.11.2
    commands:
    - go get -u golang.org/x/lint/golint
    - make lint

  # generate ssh keys
  e2e-ssh-keygen:
    image: alpine:3.8
    pull: true
    commands:
    - mkdir -m700 -p /go/.ssh
    - apk add --no-cache openssh-keygen
    - ssh-keygen -t rsa -f /go/.ssh/id_rsa -N ''
    when:
      branch:
      - master

  # create AWS infra with terraform
  e2e-aws-up:
    image: hashicorp/terraform:0.11.10
    secrets:
    - aws_access_key_id
    - aws_secret_access_key
    environment:
    - TF_DIR=terraform/aws
    - TF_VAR_aws_region=eu-west-3
    - TF_VAR_ssh_public_key_file=/go/.ssh/id_rsa.pub
    commands:
    - export TF_VAR_cluster_name=kubeone-e2e-$DRONE_BUILD_NUMBER
    - cd $TF_DIR
    - terraform init
    - terraform apply -auto-approve
    when:
      branch:
      - master

  # export terraform output as json
  e2e-aws-tfjson:
    image: hashicorp/terraform:0.11.10
    environment:
    - TF_DIR=terraform/aws
    commands:
    - terraform output -state=$TF_DIR/terraform.tfstate -json > tf.json
    - cat tf.json
    when:
      branch:
      - master

  # deploy cluster with kubeone
  e2e-create-cluster:
    image: alpine:3.8
    environment:
    - KUBECONFIG=/go/.kube/config
    secrets:
    - aws_access_key_id
    - aws_secret_access_key
    commands:
    - apk add --no-cache ca-certificates openssh-client
    - mkdir /go/.kube
    - eval $(ssh-agent)
    - ssh-add /go/.ssh/id_rsa
    - ./dist/kubeone -v install --tfjson tf.json config.yaml.dist
    - ./dist/kubeone kubeconfig --tfjson tf.json config.yaml.dist > $KUBECONFIG
    when:
      branch:
      - master

  # run conformance tests
  e2e-conformance-tests:
    image: golang:1.11.2
    environment:
    - TFJSON=terraform/aws/tf.json
    - KUBEONE_CONFIG_FILE=config.yaml.dist
    - KUBECONFIG=/go/.kube/config
    commands:
    - ./hack/run_drone_e2e.sh
    when:
      branch:
      - master

  # cleanup worker nodes
  e2e-worker-nodes-teardown:
    image: alpine:3.8
    commands:
    - ./dist/kubeone -v reset --tfjson tf.json --destroy-workers config.yaml.dist
    when:
      status:
      - failure
      - success
      branch:
      - master

  # cleanup master nodes
  e2e-aws-teardown:
    image: hashicorp/terraform:0.11.10
    secrets:
    - aws_access_key_id
    - aws_secret_access_key
    environment:
    - TF_DIR=terraform/aws
    - TF_VAR_aws_region=eu-west-3
    - TF_VAR_ssh_public_key_file=/go/.ssh/id_rsa.pub
    commands:
    - export TF_VAR_cluster_name=kubeone-e2e-$DRONE_BUILD_NUMBER
    - cd $TF_DIR
    - terraform destroy -auto-approve
    when:
      status:
      - failure
      - success
      branch:
      - master
